// Generated by view binder compiler. Do not edit!
package com.kanzu.flibook.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.kanzu.flibook.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFromfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addButton;

  @NonNull
  public final EditText editName;

  @NonNull
  public final Button fileButton;

  @NonNull
  public final TextView loadSuccess;

  @NonNull
  public final TextView path;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView typeError;

  private FragmentFromfileBinding(@NonNull ConstraintLayout rootView, @NonNull Button addButton,
      @NonNull EditText editName, @NonNull Button fileButton, @NonNull TextView loadSuccess,
      @NonNull TextView path, @NonNull TextView textView4, @NonNull TextView typeError) {
    this.rootView = rootView;
    this.addButton = addButton;
    this.editName = editName;
    this.fileButton = fileButton;
    this.loadSuccess = loadSuccess;
    this.path = path;
    this.textView4 = textView4;
    this.typeError = typeError;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFromfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFromfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_fromfile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFromfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addButton;
      Button addButton = ViewBindings.findChildViewById(rootView, id);
      if (addButton == null) {
        break missingId;
      }

      id = R.id.editName;
      EditText editName = ViewBindings.findChildViewById(rootView, id);
      if (editName == null) {
        break missingId;
      }

      id = R.id.fileButton;
      Button fileButton = ViewBindings.findChildViewById(rootView, id);
      if (fileButton == null) {
        break missingId;
      }

      id = R.id.loadSuccess;
      TextView loadSuccess = ViewBindings.findChildViewById(rootView, id);
      if (loadSuccess == null) {
        break missingId;
      }

      id = R.id.path;
      TextView path = ViewBindings.findChildViewById(rootView, id);
      if (path == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.typeError;
      TextView typeError = ViewBindings.findChildViewById(rootView, id);
      if (typeError == null) {
        break missingId;
      }

      return new FragmentFromfileBinding((ConstraintLayout) rootView, addButton, editName,
          fileButton, loadSuccess, path, textView4, typeError);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
